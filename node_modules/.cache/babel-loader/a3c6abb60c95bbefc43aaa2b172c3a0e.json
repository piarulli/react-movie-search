{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mike\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mike\\\\my-app\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\n\nconst App = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        movies = _useState4[0],\n        setMovies = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      setMovies(jsonResponse.Search);\n      setLoading(false);\n    });\n  }, []);\n\n  const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch(\"https://www.omdbapi.com/?s=\".concat(searchValue, \"&apikey=4a3b711b\")).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      } else {\n        setErrorMessage(jsonResponse.Error);\n        setLoading(false);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"React HOOK Movie Database\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"App-intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sharing a few of our favourite movies\"), React.createElement(\"div\", {\n    className: \"movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, loading && !errorMessage ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"loading...\") : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, errorMessage) : movies.map((movie, index) => React.createElement(Movie, {\n    key: \"\".concat(index, \"-\").concat(movie.Title),\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mike\\my-app\\src\\components\\App.js"],"names":["React","useState","useEffect","Header","Movie","Search","MOVIE_API_URL","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","fetch","then","response","json","jsonResponse","search","searchValue","Response","Error","map","movie","index","Title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,MAAMC,aAAa,GAAG,gDAAtB,C,CAAwE;;AAGxE,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACcN,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,QACTO,OADS;AAAA,QACAC,UADA;;AAAA,qBAEYR,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,QAETS,MAFS;AAAA,QAEDC,SAFC;;AAAA,qBAGwBV,QAAQ,CAAC,IAAD,CAHhC;AAAA;AAAA,QAGTW,YAHS;AAAA,QAGKC,eAHL;;AAKdX,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,KAAK,CAACR,aAAD,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpBP,MAAAA,SAAS,CAACO,YAAY,CAACb,MAAd,CAAT;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAMD,GAPU,EAOR,EAPQ,CAAT;;AASA,QAAMU,MAAM,GAAGC,WAAW,IAAI;AAC9BX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEAC,IAAAA,KAAK,sCAA+BM,WAA/B,sBAAL,CACGL,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,UAAIA,YAAY,CAACG,QAAb,KAA0B,MAA9B,EAAsC;AACpCV,QAAAA,SAAS,CAACO,YAAY,CAACb,MAAd,CAAT;AACAI,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD,MAGO;AACLI,QAAAA,eAAe,CAACK,YAAY,CAACI,KAAd,CAAf;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVH;AAWA,GAfA;;AAkBA,SACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHD,EAIC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,OAAO,IAAI,CAACI,YAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAEIA,YAAY,GACf;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,YAA/B,CADe,GAGfF,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACT,oBAAC,KAAD;AAAO,IAAA,GAAG,YAAKA,KAAL,cAAcD,KAAK,CAACE,KAApB,CAAV;AAAuC,IAAA,KAAK,EAAEF,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CAJD,CADD;AAkBH,CAlDD;;AAqDA,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      });\n  }, []);\n\n    const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setMovies(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  \t};\n\n    \n    return (\n     <div className=\"App\">\n      <Header text=\"React HOOK Movie Database\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}